version: '3.8'

services:
  laravel:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./:/var/www
    networks:
      - app-network

  nginx-local:
    image: nginx:latest
    volumes:
      - ./:/var/www
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - laravel
    links:
      - laravel
    ports:
      - "80:80"
    networks:
      - app-network
    environment:
      - APP_ENV=local
    profiles:
      - local

  certbot:
    image: certbot/certbot
    container_name: certbot
    entrypoint: >
      sh -c '
        certbot certonly --webroot --webroot-path=/data/letsencrypt \
        --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email \
        -d ${CERTBOT_DOMAINS} &&
        trap exit TERM; while :; do
        certbot renew --webroot -w /data/letsencrypt &&
        sleep 12h & wait $${!};
        done
      '
    volumes:
      - ./nginx/ssl-data:/etc/letsencrypt
      - ./nginx/letsencrypt:/data/letsencrypt
    networks:
      - app-network
    profiles:
      - production
    healthcheck:
      test: [ "CMD", "test", "-f", "/etc/letsencrypt/live/${CERTBOT_DOMAINS}/fullchain.pem" ]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx-production:
    image: nginx:latest
    volumes:
      - ./:/var/www
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/ssl-data:/etc/letsencrypt
      - ./nginx/letsencrypt:/data/letsencrypt
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - certbot
      - laravel
    links:
      - laravel
    networks:
      - app-network
    environment:
      - CERTBOT_DOMAINS=${CERTBOT_DOMAINS}
      - APP_ENV=production
    profiles:
      - production
    entrypoint: >
      /bin/sh -c "
      while [ ! -f /etc/letsencrypt/live/${CERTBOT_DOMAINS}/fullchain.pem ]; do
      echo 'Waiting for Certbot to generate certificates...'
      sleep 5
      done
      echo 'Certificates are ready, starting Nginx...'
      nginx -g 'daemon off;'"

networks:
  app-network:
    driver: bridge
